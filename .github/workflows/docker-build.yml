name: Manual Docker Build and Push

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker tag to use (e.g., latest, v1.0.0)'
        required: false
        default: 'latest'
      platforms:
        description: 'Target platforms'
        required: false
        default: 'linux/amd64,linux/arm64'

env:
  DOCKER_IMAGE: fdc2
  DOCKERHUB_USERNAME: cwfowers
  REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}
        tags: |
          type=raw,value=${{ github.event.inputs.tag || 'latest' }}
          type=raw,value={{date 'YYYYMMDD-HHmmss'}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: ${{ github.event.inputs.platforms || 'linux/amd64,linux/arm64' }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update Docker Hub description
      continue-on-error: true
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}
        readme-filepath: ./DOCKER_DEPLOYMENT.md

    - name: Manual Deployment Summary
      run: |
        echo "üéØ Manual Docker deployment completed!"
        echo "üê≥ Docker image: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}"
        echo "üè∑Ô∏è  Tag used: ${{ github.event.inputs.tag || 'latest' }}"
        echo "üèóÔ∏è  Platforms: ${{ github.event.inputs.platforms || 'linux/amd64,linux/arm64' }}"
        echo "üìÖ Build timestamp: $(date)"
